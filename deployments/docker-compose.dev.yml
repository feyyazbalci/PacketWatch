version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: packetwatch_postgres
    environment:
      POSTGRES_DB: packetwatch
      POSTGRES_USER: packetwatch
      POSTGRES_PASSWORD: packetwatch123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./configs/docker/postgres.conf:/etc/postgresql/postgresql.conf
    networks:
      - packetwatch_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U packetwatch -d packetwatch"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: packetwatch_redis
    ports:
      - "6375:6379"
    volumes:
      - redis_data:/data
      - ./configs/docker/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - packetwatch_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Prometheus Metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: packetwatch_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./configs/docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - packetwatch_network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: packetwatch_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/docker/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - packetwatch_network
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false

  # Nginx Reverse Proxy (Development)
  nginx:
    image: nginx:alpine
    container_name: packetwatch_nginx
    ports:
      - "80:80"
    volumes:
      - ./configs/docker/nginx.dev.conf:/etc/nginx/nginx.conf
      - ./web/dist:/usr/share/nginx/html
    networks:
      - packetwatch_network
    restart: unless-stopped
    depends_on:
      - prometheus
      - grafana

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  packetwatch_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16